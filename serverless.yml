service: rimac-starwar-api

plugins:
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  region: us-east-1
  runtime: nodejs8.10
  timeout: 300
  environment: '${file(.env.yml):${self:custom.stage}}'
  stage: development

custom:
  webpack:
    webpackConfig: './webpack.config.${self:custom.stage}.js'
    includeModules:
      forceInclude:
        - sequelize
        - tedious
  stage: ${opt:stage, self:provider.stage}
  serverless-offline:
    port: 8082
    babelOptions:
      presets:
        - env

package:
  exclude:
    - .vscode/**
    - docs/**
    - templates/**
    - tests/**
    - .editorconfig
    - .env.yml.example
    - .eslintrc.js
    - .eslintrc
    - .jsbeautifyrc
    - .editorconfig
    - .git/**
    - .gitattributes
    - .gitignore
    - artifacts
    - .npmrc
    - jsdoc.conf
    - jsdoc.conf.json
    - README.md

functions:
  health-status:
    description: Sign Up for logistis users 
    handler: functions/rest/administrator/handler.health
    events:
      - http:
          path: logistic/health
          method: get
          cors: true

  sign-up:
    description: Sign Up for logistis users 
    handler: functions/rest/administrator/handler.signUp
    events:
      - http:
          path: logistic/sign-up
          method: post
          cors: true

  upload:
    description: Upload Files to S3 for the Logistic Module
    handler: functions/rest/upload/handler.upload
    events:
      - http:
          path: logistic/upload
          method: get 
          cors: true

  request-bulk-load:
    description: Bulk Load Request
    handler: functions/rest/purchase-management/handler.requestBulkLoad
    events:
      - http:
          path: logistic/purchase-management/request/bulk-load
          method: get 
          cors: true

  request-change-state:
    description: Change state of Request
    handler: functions/rest/purchase-management/handler.requestStateChange
    events:
      - http:
          path: logistic/purchase-management/request/change-state
          method: get 
          cors: true
          request:
            parameters:
              querystrings:
                requestId: true
                state: true

  request-mailing:
    description: Email Service of Request
    handler: functions/rest/purchase-management/handler.requestMailing
    events:
      - http:
          path: logistic/purchase-management/request/mailing
          method: get 
          cors: true
          request:
            parameters:
              querystrings:
                requestId: true

  order-change-state:
    description: Change state of Order
    handler: functions/rest/purchase-management/handler.orderStateChange
    events:
      - http:
          path: logistic/purchase-management/order/change-state
          method: get 
          cors: true
          request:
            parameters:
              querystrings:
                orderId: true
                state: true

  order-mailing:
    description: Email Service of Order
    handler: functions/rest/purchase-management/handler.orderMailing 
    events:
      - http:
          path: logistic/purchase-management/order/mailing
          method: get 
          cors: true
          request:
            parameters:
              querystrings:
                orderId: true

  report:
    description: Reporting Services
    handler: functions/rest/report/handler.report
    events:
      - http:
          path: logistic/report
          method: get 
          cors: true

  graphql:
    description: XSigma GraphQL API
    handler: functions/graphql/handler.graphql
    events:
      - http:
          path: logistic/graphql
          method: post
          cors: true

  playground:
    description: XSigma Playground Service
    handler: functions/graphql/handler.graphiql
    events:
      - http:
          path: logistic/graphiql
          method: get
          cors: true

resources:
  Resources:
    ApiGatewayRestApi:
      Type: 'AWS::ApiGateway::RestApi'
      Properties: